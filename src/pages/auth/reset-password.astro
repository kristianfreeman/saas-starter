---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
---

<BaseLayout title="Reset Password">
  <div class="container flex items-center justify-center min-h-screen py-8">
    <Card class="w-full max-w-md">
      <CardHeader>
        <CardTitle>Reset your password</CardTitle>
        <CardDescription>
          Enter your new password below
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form id="reset-password-form" class="space-y-4">
          <div class="space-y-2">
            <Label for="password">New Password</Label>
            <Input
              id="password"
              name="password"
              type="password"
              minlength="8"
              required
            />
          </div>
          <div class="space-y-2">
            <Label for="confirmPassword">Confirm New Password</Label>
            <Input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              minlength="8"
              required
            />
          </div>
          <div id="error-message" class="text-sm text-destructive hidden"></div>
          <div id="success-message" class="text-sm text-green-600 hidden"></div>
          <Button type="submit" class="w-full">
            Reset password
          </Button>
        </form>
      </CardContent>
    </Card>
  </div>
</BaseLayout>

<script>
  import { updatePassword } from '@/lib/auth/config';

  const form = document.getElementById('reset-password-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message') as HTMLDivElement;
  const successMessage = document.getElementById('success-message') as HTMLDivElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const password = formData.get('password') as string;
    const confirmPassword = formData.get('confirmPassword') as string;

    // Clear previous messages
    errorMessage.textContent = '';
    errorMessage.classList.add('hidden');
    successMessage.textContent = '';
    successMessage.classList.add('hidden');

    // Validate passwords match
    if (password !== confirmPassword) {
      errorMessage.textContent = 'Passwords do not match';
      errorMessage.classList.remove('hidden');
      return;
    }

    try {
      const { error } = await updatePassword(password);
      
      if (error) {
        errorMessage.textContent = error.message;
        errorMessage.classList.remove('hidden');
        return;
      }

      // Show success message
      successMessage.textContent = 'Password reset successfully! Redirecting to login...';
      successMessage.classList.remove('hidden');
      
      // Redirect to login after 2 seconds
      setTimeout(() => {
        window.location.href = '/auth/login';
      }, 2000);
    } catch (err) {
      errorMessage.textContent = 'An unexpected error occurred';
      errorMessage.classList.remove('hidden');
    }
  });
</script>